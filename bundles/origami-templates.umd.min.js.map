{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://@codebakery/origami/templates/src/shim-template-append.ts","ng://@codebakery/origami/templates/src/polymerHost.ts","ng://@codebakery/origami/templates/src/template.directive.ts","ng://@codebakery/origami/templates/src/template.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","shimPromise","POLYMER_HOST","InjectionToken","patchPolymerHost","dataHost","_addEventListenerToNode","node","eventName","handler","addEventListener","shimHTMLTemplateAppend","_this","whenSet","window","_a","nativeAppend","HTMLTemplateElement","prototype","appendChild","childNode","content","TemplateDirective","elementRef","polymerHost","zone","ready","enableEventBindings","nativeElement","enablePropertyBindings","template","__dataHost","getTemplateInfo","hostProps","prop","initialValue","this_1","wrapAndDefineDescriptor","afterSet","changed","camelToDashCase","event","isSplicesChange","isPathChange","run","detail","_templateInfo","Array","isArray","indexSplices","path","ElementRef","Inject","args","type","Optional","NgZone","Directive","selector","TEMPLATES_READY_PROVIDER","provide","APP_INITIALIZER","multi","useValue","Éµ0","TemplateModule","NgModule","imports","WebComponentsReadyModule","declarations","providers","exports","componentType","useFactory","deps","undefined"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { whenSet } from '@codebakery/origami/util';\n\ndeclare global {\n  interface Window {\n    HTMLTemplateElement: typeof HTMLTemplateElement;\n  }\n}\n\nlet shimPromise: Promise<void> | undefined;\n/**\n * Angular incorrectly adds `<template>` children to the element's child node\n * list instead of its content. This shim forces children appended to a\n * `<template>` to be added to its content instead.\n *\n * https://github.com/angular/angular/issues/15557\n *\n * @returns a Promise that resolves when the HTMLTemplateElement is shimmed\n */\nexport function shimHTMLTemplateAppend(): Promise<void> {\n  if (!shimPromise) {\n    const shim = () => {\n      // Angular's renderer will add children to a <template> instead of to its\n      // content. This shim will force any children added to a <template> to be\n      // added to its content instead.\n      // https://github.com/angular/angular/issues/15557\n      const nativeAppend = HTMLTemplateElement.prototype.appendChild;\n      HTMLTemplateElement.prototype.appendChild = function<T extends Node>(\n        childNode: T\n      ) {\n        if (this.content) {\n          return this.content.appendChild(childNode);\n        } else {\n          return <T>nativeAppend.apply(this, [childNode]);\n        }\n      };\n    };\n\n    shimPromise = new Promise(async resolve => {\n      await whenSet(window, 'HTMLTemplateElement');\n      shim();\n      resolve();\n    });\n  }\n\n  return shimPromise;\n}\n\n/**\n * Resets `shimHTMLTemplateAppend()` so that it will re-shim the class next\n * time it is called. This is primarily used for testing.\n */\nexport function resetShimHTMLTemplateAppend() {\n  shimPromise = undefined;\n}\n","import { InjectionToken, Provider, Type } from '@angular/core';\n\n/**\n * Token that represents the Polymer host that `<template>` elements should\n * refer to for Polymer data binding. The token will be provided when using\n * `polymerHost()`.\n */\nexport const POLYMER_HOST = new InjectionToken<any>('polymerHost');\n\n/**\n * Creates a `Provider` that connects a components' Polymer `<template>`\n * elements' data binding system to the host component instance.\n *\n * This enables the use of event, one-way, and two-way Polymer data binding\n * within a `<template>` that refers to the host Angular component's methods and\n * properties.\n *\n * @param componentType the component type whose instances should be provided\n *   as the Polymer host to the instance's `<template>` elements.\n */\nexport function polymerHost(componentType: Type<any>): Provider {\n  return {\n    provide: POLYMER_HOST,\n    useFactory: patchPolymerHost,\n    deps: [componentType]\n  };\n}\n\n/**\n * Patch a data host instance with methods that are expected by Polymer's\n * `TemplateStamp` mixin. These methods are used to set up data bindings, and\n * are normally provided when a Polymer element extends from `TemplateStamp`.\n *\n * Angular components do not extend this mixin, which is why we need to patch\n * the required methods. Instances will automatically be patched when using\n * `polymerHost()`.\n *\n * @param dataHost the host to patch\n * @returns the patched dataHost\n */\nexport function patchPolymerHost(dataHost: any): any {\n  // Add methods from TemplateStamp that templatize instances expect\n  if (!dataHost._addEventListenerToNode) {\n    dataHost._addEventListenerToNode = (\n      node: Node,\n      eventName: string,\n      handler: (e: Event) => void\n    ) => {\n      node.addEventListener(eventName, handler);\n    };\n  }\n\n  return dataHost;\n}\n","import { Directive, ElementRef, Inject, Optional, NgZone } from '@angular/core';\nimport { whenSet, wrapAndDefineDescriptor } from '@codebakery/origami/util';\nimport { camelToDashCase } from '@polymer/polymer/lib/utils/case-map';\nimport { TemplateInfo } from '@polymer/polymer/interfaces';\nimport { POLYMER_HOST } from './polymerHost';\n\n/**\n * An HTMLTemplateElement that is processed by Polymer's templatizer.\n */\nexport interface PolymerTemplate extends HTMLTemplateElement {\n  /**\n   * Added by the `PropertyEffects` mixin to instruct templatize of the host\n   * for the template. Effects that are not part of the template instance will\n   * propagate to this host.\n   */\n  __dataHost?: any;\n  /**\n   * Template metadata generated from `TemplateStamp`.\n   */\n  _templateInfo?: TemplateInfo;\n  /**\n   * Host properties are defined as `_host_propName` by templatizer.\n   */\n  [hostProp: string]: any;\n}\n\n/**\n * This directive is attached to each `<template>` element. If a Polymer host\n * component is provided, this directive will enable Polymer's event and\n * two-way binding syntax styles.\n */\n@Directive({\n  selector: 'template'\n})\nexport class TemplateDirective {\n  ready: Promise<void>;\n\n  constructor(\n    public elementRef: ElementRef,\n    @Inject(POLYMER_HOST)\n    @Optional()\n    public polymerHost: any,\n    private zone: NgZone\n  ) {\n    this.ready = (async () => {\n      if (this.polymerHost) {\n        this.enableEventBindings(elementRef.nativeElement);\n        await this.enablePropertyBindings(elementRef.nativeElement);\n      }\n    })();\n  }\n\n  /**\n   * Enables the use of Polymer event bindings. An event binding is declared\n   * with the syntax `on-event-name=\"handler\"`, where `event-name` is the\n   * name of the event to listen to and `handler` is the name of the host's\n   * method to call when the event is dispatched.\n   *\n   * @param template the Polymer template to enable event binding syntax for\n   */\n  enableEventBindings(template: PolymerTemplate) {\n    // When templatize looks for a PropertyEffects host, it will use the\n    // template's __dataHost property. This is the _methodHost for a template\n    // instance and is used to add event listener bindings.\n    template.__dataHost = this.polymerHost;\n  }\n\n  /**\n   * Enables the use of Polymer property bindings. A property binding is\n   * declared either as a one-way binding `value=\"[[propName]]\"` or a two-way\n   * binding `value=\"{{propName}}\"`.\n   *\n   * @param template the Polymer template to enable data binding syntax for\n   */\n  async enablePropertyBindings(template: PolymerTemplate) {\n    const { hostProps } = await this.getTemplateInfo(template);\n    if (hostProps) {\n      for (let prop in hostProps) {\n        // Angular -> Polymer (one-way bindings)\n        const initialValue = this.polymerHost[prop];\n        wrapAndDefineDescriptor(this.polymerHost, prop, {\n          afterSet(changed: boolean, value: any) {\n            if (changed) {\n              template[`_host_${prop}`] = value;\n            }\n          }\n        });\n\n        this.polymerHost[prop] = initialValue;\n\n        // Polymer -> Angular (two-way bindings)\n        const eventName = `_host_${camelToDashCase(prop)}-changed`;\n        template.addEventListener(eventName, event => {\n          if (\n            !this.isSplicesChange(<CustomEvent>event) &&\n            !this.isPathChange(<CustomEvent>event)\n          ) {\n            this.zone.run(() => {\n              this.polymerHost[prop] = (<CustomEvent>event).detail.value;\n            });\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Retrieves the template info metadata for a Polymer template.\n   *\n   * @param template the Polymer template to retrieve template info for\n   * @returns a Promise that resolves with the template's info\n   */\n  async getTemplateInfo(template: PolymerTemplate): Promise<TemplateInfo> {\n    if (template._templateInfo) {\n      return template._templateInfo;\n    } else {\n      return await whenSet(template, '_templateInfo');\n    }\n  }\n\n  /**\n   * Indicates whether or not an event is a \"splices\" Polymer change event,\n   * which has a detail value object that dictates what elements were changed if\n   * the array reference remains the same.\n   *\n   * @param event the event to check\n   * @returns true if the event is a splices change event\n   */\n  private isSplicesChange(event: CustomEvent): boolean {\n    const value = event.detail.value;\n    return value && Array.isArray(value.indexSplices);\n  }\n\n  /**\n   * Indicates whether or not an event is a path Polymer change event, which\n   * has a detail path property indicating the path of the value changed, and a\n   * value of the path's value. This is used when an array or object reference\n   * remains the same.\n   *\n   * @param event the event to check\n   * @returns true if the event is a path change event\n   */\n  private isPathChange(event: CustomEvent): boolean {\n    return typeof event.detail.path === 'string';\n  }\n}\n","import { NgModule, Provider, APP_INITIALIZER } from '@angular/core';\nimport { WebComponentsReadyModule } from '@codebakery/origami/polyfills';\nimport { shimHTMLTemplateAppend } from './shim-template-append';\nimport { TemplateDirective } from './template.directive';\n\nshimHTMLTemplateAppend();\n\nexport const TEMPLATES_READY_PROVIDER: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useValue: shimHTMLTemplateAppend\n};\n\n@NgModule({\n  imports: [WebComponentsReadyModule],\n  declarations: [TemplateDirective],\n  providers: [TEMPLATES_READY_PROVIDER],\n  exports: [TemplateDirective]\n})\nexport class TemplateModule {}\n"]}