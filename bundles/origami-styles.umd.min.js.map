{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-origami/styles/src/modules/import-style-module.ts","ng://ngx-origami/styles/src/modules/include-styles.ts","ng://ngx-origami/styles/src/modules/style-to-emulated-encapsulation.ts","ng://ngx-origami/styles/src/modules/type-selectors.ts","ng://ngx-origami/styles/src/modules/inject-styles.ts","ng://ngx-origami/styles/src/modules/include-styles-no-router.module.ts","ng://ngx-origami/styles/src/modules/include-styles.module.ts","ng://ngx-origami/styles/src/shadycss/process-stylesheets.ts","ng://ngx-origami/styles/src/shadycss/shared-styles-host.ts","ng://ngx-origami/styles/src/shadycss/shadycss.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","cachedDomModule","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","__read","o","m","ar","error","__spread","concat","CACHED_STYLE_MODULES","Map","TYPE_STYLE_MODULES","getRegisteredTypes","from","keys","getStyleModulesFor","type","get","HOST_CONTEXT_REGEX","HOST_REGEX","styleToEmulatedEncapsulation","style","statements","parseStyleStatements","forEach","statement","addEmulation","isArray","nested","selector","trim","split","map","subSelector","part","includes","join","replace","statementsToString","inAtRule","inSingleQuote","inDoubleQuote","inBlock","leavingBlock","currentStatement","block","char","substring","indexOf","lastIndexOf","SELECTOR_TO_TYPE","TYPE_TO_SELECTOR","scanComponentFactoryResolver","resolver","has","factory","resolveComponentFactory","set","err","getTypeFor","INJECT_STYLES_PROVIDER","provide","APP_INITIALIZER","multi","useFactory","injectIncludeStyles","deps","NgModuleRef","INJECT_STYLES_NO_ROUTER_PROVIDER","injectIncludeStylesNoRouter","ngModule","injectStyles","injector","Router","events","subscribe","route","_loadedConfig","whenSet","undefined","config","module","ComponentFactoryResolver","patchRendererFactory","RendererFactory2","INJECTED_SELECTORS","$createRenderer","createRenderer","element","localName","styleModules","styles","styleModule","stylesFromModule","innerText","encapsulation","ViewEncapsulation","Emulated","None","Native","ShadowDom","_a","IncludeStylesNoRouterModule","NgModule","providers","IncludeStylesModule","USING_APPLY","InjectionToken","processStylesheets","usingApply","CustomStyleInterface","window","ShadyCSS","nativeCss","all","document","styleSheets","stylesheet","node","ownerNode","isStyleNode","hasAttribute","addCustomStyle","href","_fetching","href_1","xhr","XMLHttpRequest","addEventListener","createElement","innerHTML","responseText","parentNode","insertBefore","removeChild","open","send","MIXIN_REGEX","ShadyCSSSharedStylesHost","_this","_super","__","constructor","prototype","create","__extends","addStyles","onStylesAdded","additions","Inject","DOCUMENT","Optional","DomSharedStylesHost","ShadyCSSSharedStylesHostFactory","SHADYCSS_SHARED_STYLES_HOST_PROVIDER","ShadyCSSModule","ShadyCSSModule_1","useValue","imports","WebComponentsReadyModule","_i","customElements","styleTemplate","import","content","querySelectorAll"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DomModule } from '@polymer/polymer/lib/elements/dom-module';\n\n/**\n * The <dom-module> constructor.\n */\nlet cachedDomModule: typeof DomModule;\n\n/**\n * Style module CSS text cached by id.\n */\nlet CACHED_STYLE_MODULES = new Map<string, string>();\n\n/**\n * Imports a `<dom-module id=\"name\">` style module by its id and returns the\n * `<style>` content for the module. Ensure that the module is imported and\n * added to the DOM before calling `importStyleModule()`.\n *\n * @deprecated Use stylesFromModule from\n *   `@polymer/polymer/lib/utils/style-gather`\n * @param styleModule the named id of the style module to import\n * @returns the style module's CSS text, or an empty string if the module does\n *   not exist\n */\nexport function importStyleModule(styleModule: string): string {\n  if (!CACHED_STYLE_MODULES.has(styleModule)) {\n    if (!cachedDomModule) {\n      cachedDomModule = customElements.get('dom-module');\n    }\n\n    const styleTemplate = <HTMLTemplateElement | undefined>(\n      cachedDomModule.import(styleModule, 'template')\n    );\n    if (styleTemplate) {\n      const styles = styleTemplate.content.querySelectorAll('style');\n      CACHED_STYLE_MODULES.set(\n        styleModule,\n        Array.from(styles)\n          .map(style => style.innerText)\n          .join('\\n')\n      );\n    } else {\n      CACHED_STYLE_MODULES.set(styleModule, '');\n    }\n  }\n\n  return CACHED_STYLE_MODULES.get(styleModule)!;\n}\n\n/**\n * Resets the cache using by `importStyleModule()`, primarily used for testing.\n *\n * @deprecated clearStyleModuleCache will be removed in the next major release\n */\nexport function clearStyleModuleCache() {\n  CACHED_STYLE_MODULES = new Map();\n}\n","import { Type } from '@angular/core';\n\n/**\n * Map of types to style modules.\n */\nlet TYPE_STYLE_MODULES = new Map<Type<any>, string[]>();\n\n/**\n * Decorator that registers style modules to be injected for a given component\n * type. One or more style modules may be specified.\n *\n * @param styleModule a style module to include\n * @param styleModules additional style modules to include\n * @returns a class decorator\n */\nexport function IncludeStyles(...styleModules: string[]): ClassDecorator {\n  return (target: any) => {\n    TYPE_STYLE_MODULES.set(target, styleModules);\n    return target;\n  };\n}\n\n/**\n * Retrieves all types that have been decorated with `@IncludeStyles()`.\n *\n * @returns an array of all decorated types\n */\nexport function getRegisteredTypes(): Array<Type<any>> {\n  return Array.from(TYPE_STYLE_MODULES.keys());\n}\n\n/**\n * Retrieves the style modules for a given type that was decorated with\n * `@IncludeStyles()`\n *\n * @param type the type to retrieve style modules for\n * @returns an array of style modules for the decorated type, or an empty\n *   array if the type was not decorated\n */\nexport function getStyleModulesFor(type?: Type<any>): string[] {\n  return (type && TYPE_STYLE_MODULES.get(type)) || [];\n}\n\n/**\n * Resets all types decorated with `@IncludeStyles()`. Should only be used for\n * testing.\n */\nexport function resetIncludeStyles() {\n  TYPE_STYLE_MODULES = new Map();\n}\n","/**\n * Regex to find and replace `:host-context()` selectors.\n */\nexport const HOST_CONTEXT_REGEX = /:host-context\\((.*)\\)/g;\n/**\n * Regex to find and replace `:host` selectors.\n */\nexport const HOST_REGEX = /:host(?:\\((.*)\\))?/g;\n\n// from @angular/platform-browser\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\n/**\n * Converts the provided CSS string to an Angular emulated encapsulation string\n * for the given component id.\n *\n * @param style the CSS string to convert\n * @returns a CSS string that emulates encapsulation for the given component id\n */\nexport function styleToEmulatedEncapsulation(style: string): string {\n  const statements = parseStyleStatements(style);\n  function addEmulation(statement: StyleStatement) {\n    if (Array.isArray(statement.statements)) {\n      statement.statements.forEach(nested => addEmulation(nested));\n    } else {\n      let { selector } = statement;\n      selector = selector.trim();\n      selector = selector\n        .split(',')\n        .map(subSelector => {\n          return subSelector\n            .trim()\n            .split(' ')\n            .map(part => {\n              part = part.trim();\n              if (part.includes(':host')) {\n                return part;\n              } else {\n                return `${part}[${CONTENT_ATTR}]`;\n              }\n            })\n            .join(' ');\n        })\n        .join(',');\n\n      selector = selector.replace(HOST_CONTEXT_REGEX, `*$1 [${HOST_ATTR}]`);\n      selector = selector.replace(HOST_REGEX, `[${HOST_ATTR}]$1`);\n      statement.selector = selector;\n    }\n  }\n\n  statements.forEach(statement => {\n    addEmulation(statement);\n  });\n\n  return statementsToString(statements);\n}\n\n/**\n * Represents a single CSS statement.\n */\nexport interface StyleStatement {\n  /**\n   * The selector of the statement.\n   */\n  selector: string;\n  /**\n   * The body block of the statement.\n   */\n  block: string;\n  /**\n   * The body block statements. This is used for at-rule selectors such as\n   * `@media {}`\n   */\n  statements?: StyleStatement[];\n}\n\n/**\n * Parses a CSS string into an array of statements.\n *\n * @param style the CSS string to parse\n * @returns an array of CSS statements\n */\nexport function parseStyleStatements(style: string): StyleStatement[] {\n  let inAtRule = false;\n  let inSingleQuote = false;\n  let inDoubleQuote = false;\n  let inBlock = 0;\n  let leavingBlock = false;\n\n  const statements: StyleStatement[] = [];\n  let currentStatement: StyleStatement = {\n    selector: '',\n    block: ''\n  };\n\n  for (let i = 0; i < style.length; i++) {\n    const char = style[i];\n    switch (char) {\n      case '@':\n        inAtRule = true;\n        break;\n      case \"'\":\n        inSingleQuote = !inSingleQuote;\n        break;\n      case '\"':\n        inDoubleQuote = !inDoubleQuote;\n        break;\n      case '{':\n      case '}':\n        if (!inSingleQuote && !inDoubleQuote) {\n          if (char == '{') {\n            inBlock++;\n          } else {\n            inBlock--;\n            leavingBlock = inBlock === 0;\n          }\n        }\n\n        break;\n    }\n\n    if (inBlock) {\n      currentStatement.block += char;\n    } else if (leavingBlock) {\n      currentStatement.block += char;\n      if (inAtRule) {\n        currentStatement.statements = parseStyleStatements(\n          currentStatement.block.substring(\n            currentStatement.block.indexOf('{') + 1,\n            currentStatement.block.lastIndexOf('}')\n          )\n        );\n      }\n\n      currentStatement.selector = currentStatement.selector.trim();\n      currentStatement.block = currentStatement.block.trim();\n      statements.push(currentStatement);\n      currentStatement = { selector: '', block: '' };\n      leavingBlock = false;\n    } else {\n      currentStatement.selector += char;\n    }\n  }\n\n  return statements;\n}\n\n/**\n * Converts an array of statements back into a single CSS string.\n *\n * @param statements the statements to convert\n * @returns a CSS string\n */\nexport function statementsToString(statements: StyleStatement[]): string {\n  return statements\n    .map(statement => {\n      const block = Array.isArray(statement.statements)\n        ? `{${statementsToString(statement.statements)}}`\n        : statement.block;\n      return `${statement.selector} ${block}`;\n    })\n    .join('\\n');\n}\n","import { ComponentFactoryResolver, Type } from '@angular/core';\nimport { getRegisteredTypes } from './include-styles';\n\nlet SELECTOR_TO_TYPE = new Map<string, Type<any>>();\nlet TYPE_TO_SELECTOR = new Map<Type<any>, string>();\n\n/**\n * Scans a `ComponentFactoryResolver` for types decorated with\n * `@IncludeStyles()` to build a map of types and selectors.\n *\n * @param resolver the `ComponentFactoryResolver` to scan\n */\nexport function scanComponentFactoryResolver(\n  resolver: ComponentFactoryResolver\n) {\n  Array.from(getRegisteredTypes()).forEach(type => {\n    if (!TYPE_TO_SELECTOR.has(type)) {\n      try {\n        const factory = resolver.resolveComponentFactory(type);\n        TYPE_TO_SELECTOR.set(type, factory.selector);\n        SELECTOR_TO_TYPE.set(factory.selector, type);\n      } catch (err) {\n        // No component factory found\n      }\n    }\n  });\n}\n\n/**\n * Retrieves the component type for a given selector string. The component must\n * have been decorated by `@IncludeStyles()` and scanned by\n * `scanComponentFactoryResolver()`.\n *\n * @param selector the selector of the component type\n * @returns the component type, or undefined if the type is not decorated or\n *   scanned\n */\nexport function getTypeFor(selector: string): Type<any> | undefined {\n  return SELECTOR_TO_TYPE.get(selector);\n}\n\n/**\n * Resets the type selector maps that were scanned by\n * `scanComponentFactoryResolver()`. This should only be used for testing.\n */\nexport function resetTypeSelectors() {\n  SELECTOR_TO_TYPE = new Map();\n  TYPE_TO_SELECTOR = new Map();\n}\n","import {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModuleRef,\n  Provider,\n  RendererFactory2,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { stylesFromModule } from '@polymer/polymer/lib/utils/style-gather';\nimport { whenSet } from 'ngx-origami/util';\nimport { getStyleModulesFor } from './include-styles';\nimport { styleToEmulatedEncapsulation } from './style-to-emulated-encapsulation';\nimport { getTypeFor, scanComponentFactoryResolver } from './type-selectors';\n\n/**\n * Provider that ensures `injectIncludeStyles()` will run on application\n * startup before components are created.\n */\nexport const INJECT_STYLES_PROVIDER: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: injectIncludeStyles,\n  deps: [NgModuleRef]\n};\n\n/**\n * Provider that ensures `injectIncludeStyles()` will run on application\n * startup before components are created. This provider does _not_ require\n * @angular/router.\n */\nexport const INJECT_STYLES_NO_ROUTER_PROVIDER: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: injectIncludeStylesNoRouter,\n  deps: [NgModuleRef]\n};\n\n/**\n * Returns a callback that, when invoked, will use the provided `NgModuleRef`\n * to patch the renderer factory and scan the component factory resolver in\n * order to enable injecting Polymer style modules for components decorated with\n * `@IncludeStyles()`.\n *\n * This function will additionally listen to any lazy-loaded modules from\n * Angular's router and scan component factory resolvers that are added after\n * the app has initialized.\n *\n * @param ngModule the root `NgModule` reference\n * @returns a callback that will begin the injection process\n */\nexport function injectIncludeStyles(ngModule: NgModuleRef<any>): () => void {\n  const injectStyles = injectIncludeStylesNoRouter(ngModule);\n  return () => {\n    injectStyles();\n    const router = <Router>ngModule.injector.get(Router);\n    router.events.subscribe(e => {\n      if ('route' in e && !(<any>e.route)._loadedConfig) {\n        whenSet(<any>e.route, '_loadedConfig', undefined, config => {\n          scanComponentFactoryResolver(\n            config.module.injector.get(ComponentFactoryResolver)\n          );\n        });\n      }\n    });\n  };\n}\n\n/**\n * Returns a callback that, when invoked, will use the provided `NgModuleRef`\n * to patch the renderer factory and scan the component factory resolver in\n * order to enable injecting Polymer style modules for components decorated with\n * `@IncludeStyles()`.\n *\n * @param ngModule the root `NgModule` reference\n * @returns a callback that will begin the injection process\n */\nexport function injectIncludeStylesNoRouter(\n  ngModule: NgModuleRef<any>\n): () => void {\n  return () => {\n    patchRendererFactory(ngModule.injector.get(RendererFactory2));\n    scanComponentFactoryResolver(\n      ngModule.injector.get(ComponentFactoryResolver)\n    );\n  };\n}\n\nconst INJECTED_SELECTORS: string[] = [];\n\n/**\n * Patches a `RendererFactory2` to overwrite `createRenderer()` and add styles\n * imported from Polymer style modules according to `@IncludeStyles()`\n * decorators to the `RendererType2` data for the element.\n *\n * If the element type using emulated view encapsulation, the styles imported\n * will be converted to preserve encapsulation.\n *\n * @param factory the renderer factory to patch\n */\nexport function patchRendererFactory(factory: RendererFactory2) {\n  const $createRenderer = factory.createRenderer;\n  factory.createRenderer = function(element, type) {\n    const selector = element && element.localName;\n    if (selector && type && INJECTED_SELECTORS.indexOf(selector) === -1) {\n      const styleModules = getStyleModulesFor(getTypeFor(selector));\n      let styles = styleModules.map(styleModule => {\n        const styleElements = stylesFromModule(styleModule);\n        return styleElements.map(e => e.innerText).join('\\n');\n      });\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n        default:\n          styles = styles.map(style => styleToEmulatedEncapsulation(style));\n          break;\n        case ViewEncapsulation.None:\n        case ViewEncapsulation.Native:\n        case ViewEncapsulation.ShadowDom:\n          break;\n      }\n\n      type.styles.push(...styles);\n      INJECTED_SELECTORS.push(selector);\n    }\n\n    return $createRenderer.apply(this, <any>arguments);\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { INJECT_STYLES_NO_ROUTER_PROVIDER } from './inject-styles';\n\n/**\n * Importing this module will add the ability for Angular components to include\n * Polymer style modules with the `@IncludeStyles()` decorator. This module\n * only needs to be imported once at the root component.\n *\n * This module does _not_ require `@angular/router` and will not inject styles\n * into lazy loaded components.\n */\n@NgModule({\n  providers: [INJECT_STYLES_NO_ROUTER_PROVIDER]\n})\nexport class IncludeStylesNoRouterModule {}\n","import { NgModule } from '@angular/core';\nimport { INJECT_STYLES_PROVIDER } from './inject-styles';\n\n/**\n * Importing this module will add the ability for Angular components to include\n * Polymer style modules with the `@IncludeStyles()` decorator. This module\n * only needs to be imported once at the root component.\n *\n * This module _requires_` @angular/router` in order to inject styles for lazy\n * loaded components. Use `InjectStylesNoRouterModule` if your application does\n * not use `@angular/router`.\n */\n@NgModule({\n  providers: [INJECT_STYLES_PROVIDER]\n})\nexport class IncludeStylesModule {}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * By default, Origami will not parse or register styles with ShadyCSS if the\n * platform supports native CSS custom properties. However, ShadyCSS also\n * supports the deprecated `@apply` mixin proposal. If a project is using\n * `@apply` in CSS, this token should be provided with a true value.\n */\nexport const USING_APPLY = new InjectionToken<boolean>('usingApply');\n\n/**\n * Processes all current document stylesheets added by Angular and registers\n * them with ShadyCSS.\n *\n * This function will also parse external `<link>` stylesheets if native\n * CSS custom properties are not supported, or if `usingApply` is set to true.\n *\n * @param usingApply if true, parse stylesheets regardless of native support,\n *   since no browser supports `@apply` natively\n * @returns a Promise when all stylesheets have been processed\n */\nexport async function processStylesheets(usingApply?: boolean): Promise<void> {\n  const CustomStyleInterface =\n    window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;\n  if (CustomStyleInterface && (!window.ShadyCSS.nativeCss || usingApply)) {\n    await Promise.all(\n      Array.from(document.styleSheets).map(stylesheet => {\n        const node = stylesheet.ownerNode;\n        if (isStyleNode(node) && !node.hasAttribute('scope')) {\n          CustomStyleInterface.addCustomStyle(node);\n          return Promise.resolve();\n        } else if (stylesheet.href) {\n          if (!(<any>stylesheet)._fetching) {\n            const href = stylesheet.href;\n            (<any>stylesheet)._fetching = new Promise<void>(resolve => {\n              const xhr = new XMLHttpRequest();\n              xhr.addEventListener('load', () => {\n                const style = document.createElement('style');\n                style.innerHTML = xhr.responseText;\n                node.parentNode!.insertBefore(style, node);\n                node.parentNode!.removeChild(node);\n                CustomStyleInterface.addCustomStyle(style);\n                resolve();\n              });\n\n              xhr.open('GET', href);\n              xhr.send();\n            });\n          }\n\n          return (<any>stylesheet)._fetching;\n        }\n      })\n    );\n  }\n}\n\n/**\n * Returns true if the provided node is a `<style>` node.\n *\n * @param node the node to test\n * @returns true if the node is a `<style>` node\n */\nexport function isStyleNode(node: Node): node is HTMLStyleElement {\n  return (<HTMLStyleElement>node).localName === 'style';\n}\n","import { Inject, Optional, Provider } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ɵDomSharedStylesHost as DomSharedStylesHost } from '@angular/platform-browser';\nimport { USING_APPLY, processStylesheets } from './process-stylesheets';\n\n// First group is incorrect escape backslash, second group is rest of mixin detection\nconst MIXIN_REGEX = /(?:\\\\)(--\\w[\\w-_]*:\\s*{[^}]*})(;)?/g;\n\n/**\n * A `SharedStylesHost` that extends the default `DomSharedStylesHost` and will\n * pass styles to ShadyCSS for processing. This will allow the use of custom CSS\n * properties in Angular styles on browsers that do not support them.\n */\nexport class ShadyCSSSharedStylesHost extends DomSharedStylesHost {\n  constructor(\n    @Inject(DOCUMENT) document: Document,\n    @Optional()\n    @Inject(USING_APPLY)\n    private usingApply?: boolean\n  ) {\n    /* istanbul ignore next */\n    super(document);\n  }\n\n  addStyles(styles: string[]) {\n    /**\n     * Mixins are declared as\n     *\n     * html {\n     *   --my-mixin: {\n     *     color: blue;\n     *   }\n     * }\n     *\n     * But are incorrectly interpolated by the webpack CSS loader as\n     *\n     * html {\n     *   \\--my-mixin: {\n     *     color: blue;\n     *   }\n     * }\n     *\n     * This regex will fix the added backslash.\n     */\n    super.addStyles(styles.map(style => style.replace(MIXIN_REGEX, '$1')));\n  }\n\n  onStylesAdded(additions: Set<string>) {\n    super.onStylesAdded(additions);\n    processStylesheets(this.usingApply);\n  }\n}\n/**\n * Factory that creates a new ShadyCSSSharedStylesHost.\n */\nexport function ShadyCSSSharedStylesHostFactory() {\n  return new ShadyCSSSharedStylesHost(document);\n}\n/**\n * Provider that replaces the DomSharedStylesHost with ShadyCSSSharedStylesHost.\n */\nexport const SHADYCSS_SHARED_STYLES_HOST_PROVIDER: Provider = {\n  provide: DomSharedStylesHost,\n  useFactory: ShadyCSSSharedStylesHostFactory\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { WebComponentsReadyModule } from 'ngx-origami/polyfills';\nimport { USING_APPLY } from './process-stylesheets';\nimport { SHADYCSS_SHARED_STYLES_HOST_PROVIDER } from './shared-styles-host';\n\n/**\n * Adds ShadyCSS support to Angular. This allows the use of CSS custom\n * properties in Angular styles on browsers that do not support them.\n *\n * The ShadyCSS polyfill must be imported separately. It may be imported from\n * `@webcomponents/shadycss/entrypoints/custom-style-interface.js`\n * or `@polymer/polymer/lib/elements/custom-style.js`.\n *\n * If using the deprecated `@apply` mixin proposal, import\n * `ShadyCSSModule.usingApply()` instead.\n */\n@NgModule({\n  imports: [WebComponentsReadyModule],\n  providers: [SHADYCSS_SHARED_STYLES_HOST_PROVIDER]\n})\nexport class ShadyCSSModule {\n  /**\n   * Forces Origami to register all stylesheets with ShadyCSS regardless of\n   * native CSS custom property support. Import `ShadyCSSModule.usingApply()`\n   * when using `@apply` mixins.\n   */\n  static usingApply(): ModuleWithProviders {\n    return {\n      ngModule: ShadyCSSModule,\n      providers: [\n        {\n          provide: USING_APPLY,\n          useValue: true\n        }\n      ]\n    };\n  }\n}\n"]}